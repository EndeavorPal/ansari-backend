# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Ansari CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env: 
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      KALEMAT_API_KEY: ${{ secrets.KALEMAT_API_KEY }}
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install PostgreSQL Client
      run: sudo apt-get install -y postgresql-client
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Set up PostgreSQL Database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
      run: |
        # Wait for PostgreSQL to be ready
        psql -h localhost -U postgres -d postgres -c "\i sql/01_create_tables.sql"
        psql -h localhost -U postgres -d postgres -c "\i sql/02_create_user_tokens.sql"
        psql -h localhost -U postgres -d postgres -c "\i sql/03_create_reset_tokens.sql"
        psql -h localhost -U postgres -d postgres -c "\i sql/04_create_feedback_table.sql"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
